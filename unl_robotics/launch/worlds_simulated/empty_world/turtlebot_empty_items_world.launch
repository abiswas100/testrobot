<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <!-- Declare the world in which we want to start -->
  <arg name="world_name" default="$(find unl_smart_robotic_home)/worlds/empty_items.world"/>

  <!-- Initial pose of the robot -->
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  
  <!-- === Utilities === -->
  <arg name="amcl" default="true"/>
  <arg name="yolo" default="true"/>
  <arg name="rviz" default="true"/>
  <arg name="rviz_config" default="pureza_bot"/>
  <arg name="map_file"    default="$(find unl_smart_robotic_home)/buildings/empty/maps/empty.yaml"/>  -->

  
  <!-- === Spawn Gazebo === -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>


  <!--=== map_server ===-->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />


  <!-- === Spawn the turtlebot robot === -->
  <include file="$(find unl_smart_robotic_home)/launch/robots/turtlebot.launch">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>

  
  <!-- === AMCL === -->
  <group if="$(arg amcl)">
    <include file="$(find unl_smart_robotic_home)/launch/services/amcl.launch">
      <arg name="3d_sensor" value="asus_xtion_pro"/>
      <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
      <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
      <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
    </include>
  </group>
  
  
  <!-- === RViz support ===-->
  <group if="$(arg rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find unl_smart_robotic_home)/rviz/$(arg rviz_config).rviz"/>
  </group>

  
  <!-- === yolo support ===-->
  <!-- optionally set the camera topic for yolo to process -->
  <group if="$(arg yolo)">
    <include file="$(find unl_smart_robotic_home)/launch/services/embedded_yolo.launch" />
  </group>
  
  
</launch>
