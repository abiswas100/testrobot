<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <!-- Set this if you want to load a different "furniture" imbued world -->
  <arg name="world_name" default="$(find unl_smart_robotic_home)/worlds/empty.world"/>
  
  <!-- === Utilities === -->
  <arg name="rviz" default="true"/>
  <arg name="rviz_profile" default="pureza.rviz"/>
  <arg name="map_file" default="$(find unl_smart_robotic_home)/buildings/pureza/maps/pureza.yaml"/>  

  
  <!-- === Spawn Gazebo === -->
  
  <!--Gazebo Variables--> 
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>


  <!-- The building is rooted in the world frame. Establish the relationship between the world and map frames -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="world_map_tf_broadcaster"
        args="0   0   0   0   0   0   world   map" />
  

  <!-- === Spawn the Pureza "robot" ===-->
  <arg name="pureza_name" value="pureza_bot"/>           <!-- The model name for this robot -->
  <arg name="pureza_namespace" value="pureza_bot_ns"/>   <!-- Namespace used for this robot -->
  <group ns="$(arg pureza_namespace)">
    <param name="robot_description"
           command="$(find xacro)/xacro --inorder '$(find unl_smart_robotic_home)/urdf/buildings/pureza/pureza.xacro'
                    robot_name:=$(arg pureza_name)
                    pureza_namespace:=$(arg pureza_namespace)" />
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-urdf -param /$(arg pureza_namespace)/robot_description -model $(arg pureza_name)"
          respawn="false" output="screen" />

    <!-- Provide transform between the Pureza robot frame and the real world frame -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg pureza_name)_tf_broadcaster"
          args="0   0   0   0   0   0   world  $(arg pureza_namespace)/building_footprint_link" />
  
    <!-- Start the robot state publisher for the pureza bot within the pureza namespace  -->
    <node name="robot_state_publisher"
          pkg="robot_state_publisher"
          type="robot_state_publisher"
	        respawn="false" output="screen"
          ns="$(arg pureza_namespace)">
      <param name="tf_prefix" value="$(arg pureza_namespace)" />
    </node>
    
    <!-- Add any controllers for the building, if applicable -->
  </group>

  
  <!-- === RViz support ===-->
  <group if="$(arg rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find unl_smart_robotic_home)/rviz/$(arg rviz_profile).rviz"/>
  </group>

  
</launch>
